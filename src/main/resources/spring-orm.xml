<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 引入配置文件 比如db.properties -->
    <context:property-placeholder location="classpath*:*.properties" ignore-unresolvable="true"/>

    <context:annotation-config/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${salessystem.db.driver}" />
        <property name="url" value="${salessystem.db.url}" />
        <property name="username" value="${salessystem.db.user}" />
        <property name="password" value="${salessystem.db.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${salessystem.db.initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${salessystem.db.maxActive}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${salessystem.db.maxIdle}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${salessystem.db.minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${salessystem.db.maxWait}"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 加上 mode="aspectj"会报错，不知为什么 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 整合Spring和MyBatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping文件 -->
        <property name="mapperLocations" value="classpath*:mybatis/mapping/*.xml"/>
        <property name="typeAliasesPackage" value="com.netease.db.model"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.netease.db.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
</beans>
